--- b/llvm/adainclude/llvm-target_machine.adb
+++ a/llvm/adainclude/llvm-target_machine.adb
@@ -182,44 +182,6 @@
       return Return_Value;
    end Create_Target_Machine;
 
-   function Create_Target_Machine_With_ABI
-     (T          : Target_T;
-      Triple     : Interfaces.C.Strings.chars_ptr;
-      CPU        : Interfaces.C.Strings.chars_ptr;
-      Features   : Interfaces.C.Strings.chars_ptr;
-      ABI        : Interfaces.C.Strings.chars_ptr;
-      Level      : Code_Gen_Opt_Level_T;
-      Reloc      : Reloc_Mode_T;
-      Code_Model : Code_Model_T)
-      return Target_Machine_T
-   with Import => True,
-        Convention => C,
-        External_Name => "LLVMCreateTargetMachineWithABI";
-   function Create_Target_Machine_With_ABI
-     (T          : Target_T;
-      Triple     : String;
-      CPU        : String;
-      Features   : String;
-      ABI        : String;
-      Level      : Code_Gen_Opt_Level_T;
-      Reloc      : Reloc_Mode_T;
-      Code_Model : Code_Model_T)
-      return Target_Machine_T
-   is
-      Return_Value    : Target_Machine_T;
-      Triple_Array    : aliased char_array := To_C (Triple);
-      Triple_String   : constant chars_ptr := To_Chars_Ptr (Triple_Array'Unchecked_Access);
-      CPU_Array       : aliased char_array := To_C (CPU);
-      CPU_String      : constant chars_ptr := To_Chars_Ptr (CPU_Array'Unchecked_Access);
-      Features_Array  : aliased char_array := To_C (Features);
-      Features_String : constant chars_ptr := To_Chars_Ptr (Features_Array'Unchecked_Access);
-      ABI_Array       : aliased char_array := To_C (ABI);
-      ABI_String      : constant chars_ptr := To_Chars_Ptr (ABI_Array'Unchecked_Access);
-   begin
-      Return_Value := Create_Target_Machine_With_ABI (T, Triple_String, CPU_String, Features_String, ABI_String, Level, Reloc, Code_Model);
-      return Return_Value;
-   end Create_Target_Machine_With_ABI;
-
    function Get_Target_Machine_Triple
      (T : Target_Machine_T)
       return Interfaces.C.Strings.chars_ptr
--- b/llvm/adainclude/llvm-target_machine.ads
+++ a/llvm/adainclude/llvm-target_machine.ads
@@ -142,28 +142,16 @@
       Code_Model : Code_Model_T)
       return Target_Machine_T;
 
-  --* Creates a new llvm::TargetMachine. See llvm::Target::createTargetMachine  
-function Create_Target_Machine_With_ABI
-     (T          : Target_T;
-      Triple     : String;
-      CPU        : String;
-      Features   : String;
-      ABI        : String;
-      Level      : Code_Gen_Opt_Level_T;
-      Reloc      : Reloc_Mode_T;
-      Code_Model : Code_Model_T)
-      return Target_Machine_T;
-
   --* Dispose the LLVMTargetMachineRef instance generated by
   --  LLVMCreateTargetMachine.  
 
+   procedure Dispose_Target_Machine (T : Target_Machine_T)  -- install/include/llvm-c/TargetMachine.h:108
-   procedure Dispose_Target_Machine (T : Target_Machine_T)  -- install/include/llvm-c/TargetMachine.h:115
    with Import => True, 
         Convention => C, 
         External_Name => "LLVMDisposeTargetMachine";
 
   --* Returns the Target used in a TargetMachine  
+   function Get_Target_Machine_Target (T : Target_Machine_T) return Target_T  -- install/include/llvm-c/TargetMachine.h:111
-   function Get_Target_Machine_Target (T : Target_Machine_T) return Target_T  -- install/include/llvm-c/TargetMachine.h:118
    with Import => True, 
         Convention => C, 
         External_Name => "LLVMGetTargetMachineTarget";
@@ -193,7 +181,7 @@
       return String;
 
   --* Create a DataLayout based on the targetMachine.  
+   function Create_Target_Data_Layout (T : Target_Machine_T) return LLVM.Target.Target_Data_T  -- install/include/llvm-c/TargetMachine.h:129
-   function Create_Target_Data_Layout (T : Target_Machine_T) return LLVM.Target.Target_Data_T  -- install/include/llvm-c/TargetMachine.h:136
    with Import => True, 
         Convention => C, 
         External_Name => "LLVMCreateTargetDataLayout";
@@ -251,7 +239,7 @@
       return String;
 
   --* Adds the target-specific analysis passes to the pass manager.  
+   procedure Add_Analysis_Passes (T : Target_Machine_T; PM : LLVM.Types.Pass_Manager_T)  -- install/include/llvm-c/TargetMachine.h:165
-   procedure Add_Analysis_Passes (T : Target_Machine_T; PM : LLVM.Types.Pass_Manager_T)  -- install/include/llvm-c/TargetMachine.h:172
    with Import => True, 
         Convention => C, 
         External_Name => "LLVMAddAnalysisPasses";
